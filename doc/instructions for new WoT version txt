
******************************************************
** INSTRUCTIONS FOR UPDATEING THE WoT BATTLE PARSER **
** Created by: BadButton / http://wotnumbers.com    **
******************************************************

This is a procedure for how to update the WoT battle parser when WoT new version is released
It requires a Windows PC, procedure is tested on Windows 10
Python 2.7 with uncompyle6 must be installed
This project is made for Visual Studio Code, but other ediors can be used
Beyond Compare is reccomeeded for comparing files (https://www.scootersoftware.com/download.php)

The following files needs attention:
	wotbr2j.py = WoT Battle Result To Json, custom Python script for unpacking the battle file produced by WoT game client after each battle
	dictpackers.py = methods for unpacking data, extracted from WoT installation files
	battle_results_shared.py = data structure, extracted from WoT installation files (used for WoT previous versions before 1.10.1.0)
	battle_results_common.py = data structure, extracted from WoT installation files (consider to be used for WoT previous version 1.10.1.0)
	
PREPARATIONS - Create folder for new battle parser version

	Navigate to the folder: \versions located in this project
	Create new folder with name: 'WoT_X.X.X.X' that represent the battle parser new version 
	
	Copy these files from the previous version into the new version, to be reused with just small modifications:
		wotbr2j.py
		dictpackers.py

	Open the file wotbr2j.py and update version number in line 48 to be the same as the new WoT version

STEP 1 - Exctract source files from WoT game client

	Go to folder:        <your WoT install folder>\res\packages - ex: C:\Games\World_of_Tanks\res\packages
	Open using 7zip:     scripts.pkg
	Browse to folder:    scripts
	Select the folder:   common 
	Create temp folder:  create a temporary folder for extracting files to - ex: C:\Dev\WoT_Files_Raw\<wot_version_number>
	Extract files:		 extract files to the newly created temp folder

STEP 2 - Uncompile extracted source files

	Make sure you have uncompyle6 installed in your Python environment (https://pypi.org/project/uncompyle6/)
	Open Command Prompt at the location of the extracted files - ex: C:\Dev\WoT_Files_Raw\<wot_version_number>\common
	Run Python decompiler on the following files, just copy the following section paste into the command prompt window:

	uncompyle6 -o .\decompiled_battle\dictpackers.py .\DictPackers.pyc
	uncompyle6 -o .\decompiled_battle\battle_results_shared.py .\battle_results_shared.pyc
	uncompyle6 -o .\decompiled_battle\vehicles.py .\items\vehicles.pyc
	uncompyle6 -o .\decompiled_battle\badges_common.py .\items\badges_common.pyc
	uncompyle6 -o .\decompiled_battle\constants.py .\constants.pyc
	uncompyle6 -o .\decompiled_battle\battle_results_common.py .\battle_results\battle_results_common.pyc
	uncompyle6 -o .\decompiled_battle\battle_results_constants.py .\battle_results\battle_results_constants.pyc
	@echo done

STEP 3 - Fast fix (not doable for versiom 1.10.1.0)

	Navigate to the folder named 'decompiled_battle' created in previous step.
	Copy these files into the new version folder 
		battle_results_shared.py
		battle_results_common.py (new in version 1.10.1.0)
		battle_results_constants.py (new in version 1.10.1.0)
	
	Compare these files with files having same filename from previous version, identify changes
	It is quite conveniant to use the software: 'Beyond Compare' for this job
	For the file 'battle_results_shared.py' the normal changes has been:
		Modify first part of the file where libs are included, make changes in new file similar to previous one
		The referenced libraries must be included in the file to avoid lookup for these in separate files
		It is normal that the middle and largest part of the file has some changes changed compared to the previos one
		Comment out the last few lines where error logging happens: #from debug_utils import LOG_ERROR / #LOG_ERROR('PACKING EXCEPTION', e, str(self))
	The new files that might be relevant: 'battle_results_common.py' and 'battle_results_constants.py' needs investigation, not sure if these should be used
	
	If there is just minor changes in the new WoT version this could be enought, and the parser will then be able to run

STEP 4 - Complete fix

    If the previous fix was not successful (and it was not for version 1.10.1.0), further investigations must be done
	The file: 'battle_results_shared.pyc' and 'DictPackers.pyc' has previously been the main files to be investigated
	For version 1.10.1.0 there might be new files that must be included
	
STEP 4.1 - Investigate 'DictPackers.py'

	Navigate to the folder named 'decompiled_battle' created in step 2
	Compare the file 'DictPackers.py' with the current used file 'dictpackers.py' in the root folder of this project
		It is reccomeeded to use: 'Beyond Compare' for this job

	The  file from the previous version has some modifications, that needs to be applied to the new version
	These changes are expected:

	1) 	The library LOG_ERROR from debug_utils should not be used, the following lines will be uncommented (line numbers can vary)
			Line 6: #from debug_utils import LOG_ERROR
			Line 86: #LOG_ERROR('error while packing:', index, metaEntry, str(e))
	
	2) In some circumstanses uncompyle adds line break after brackets '[', ex: [None] can be split into two lines and must be corrected manually

	3) The class unpackWthoutChecksum() is added as a custom class and will not exist in the original file

	If the new file is not changed (taking the modifications nemtion above into consideration):
		The currently used "dictpackers.py" in the root folder of this project can still be used

	If the new file has changes:
		Rename the newly uncompiled 'DictPackers.py' to 'dictpackers.py' and copy it into the root folder of this project, overwrite existing file
		Perfom changes to the 'dictpackers.py' file similar as what was done to the previous one:
			1) Comment out 'LOG_ERROR' lines 
			2) Fix unwanted line breaks after brackets '[' if any exists
			3) Add the unpackWthoutChecksum() method as a copy of the unpack() method, but leave out the part performing checksum comparing

STEP 4.2 - Investigate 'battle_results_shared.py' and other files

	Unknown actions...





